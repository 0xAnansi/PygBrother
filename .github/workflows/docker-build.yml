name: "CI/CD: Test and Build Docker Image"

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres:17.5
    #     env:
    #       POSTGRES_DB: testdb
    #       POSTGRES_USER: testuser
    #       POSTGRES_PASSWORD: testpass
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests with pytest and JUnit XML output
      run: |
        env PYTHONPATH=$PWD pytest --junitxml=pytest-report.xml --cov --cov-branch --cov-report=xml tests/
    - name: Upload pytest results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-report
        path: pytest-report.xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: 0xAnansi/PygBrother

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build Docker image
      run: |
        docker build -t pygbrother:latest .
    - name: Save Docker image as artifact (optional)
      uses: actions/upload-artifact@v4
      with:
        name: pygbrother-docker-image
        path: /tmp/pygbrother.tar
      if: always()
      continue-on-error: true
      # Save the image to a tarball for download (optional)
    - name: Save Docker image to tarball
      run: |
        docker save pygbrother:latest -o /tmp/pygbrother.tar
